/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/sessions/book/route";
exports.ids = ["app/api/sessions/book/route"];
exports.modules = {

/***/ "(rsc)/./app/api/sessions/book/route.ts":
/*!****************************************!*\
  !*** ./app/api/sessions/book/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _lib_server_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/server-auth */ \"(rsc)/./lib/server-auth.ts\");\n/* harmony import */ var _lib_api_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/api-response */ \"(rsc)/./lib/api-response.ts\");\n\n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__.createClient)(\"https://frzciymslvpohhyefmtr.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\nasync function POST(request) {\n    try {\n        // 1. SECURE Authentication Check - verify server-side session\n        const authResult = await (0,_lib_server_auth__WEBPACK_IMPORTED_MODULE_1__.requireApiAuth)([\n            'individual'\n        ]);\n        if ('error' in authResult) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(authResult.error, {\n                status: 401\n            });\n        }\n        const { session } = authResult;\n        const userId = session.user.id // This is now TRUSTED and verified\n        ;\n        const userEmail = session.user.email;\n        const userName = session.user.full_name;\n        // 2. Parse and validate request\n        const requestData = await request.json();\n        // Use centralized validation\n        (0,_lib_api_response__WEBPACK_IMPORTED_MODULE_2__.validateRequired)(requestData, [\n            'therapist_id',\n            'session_date',\n            'start_time'\n        ]);\n        const { therapist_id, session_date, start_time, duration = 30, session_type = 'video', notes = '' } = requestData;\n        console.log('üîÑ Processing booking request:', {\n            userId,\n            userEmail,\n            therapist_id,\n            session_date,\n            start_time\n        });\n        console.log('üîç DEBUG: Therapist ID type:', typeof therapist_id);\n        console.log('üîç DEBUG: Therapist ID value:', therapist_id);\n        // 3. Validate therapist exists and is available\n        console.log('üîç DEBUG: Looking for therapist with ID:', therapist_id);\n        const { data: therapist, error: therapistError } = await supabase.from('users').select(`\n        id,\n        full_name,\n        email,\n        user_type,\n        is_active,\n        is_verified,\n        therapist_profiles!inner (\n          verification_status,\n          is_verified\n        )\n      `).eq('id', therapist_id).eq('user_type', 'therapist').eq('is_active', true).eq('is_verified', true).eq('therapist_profiles.verification_status', 'approved').single();\n        console.log('üîç DEBUG: Therapist query result:', {\n            therapist,\n            therapistError\n        });\n        if (therapistError) {\n            console.error('‚ùå Therapist query error:', therapistError);\n            throw new _lib_api_response__WEBPACK_IMPORTED_MODULE_2__.NotFoundError('Therapist not found or not available');\n        }\n        if (!therapist) {\n            console.error('‚ùå No therapist found with ID:', therapist_id);\n            throw new _lib_api_response__WEBPACK_IMPORTED_MODULE_2__.NotFoundError('Therapist not found or not available');\n        }\n        console.log('‚úÖ Therapist found:', therapist.full_name);\n        // 4. Check if user has available credits (check both 'individual' and 'user' types)\n        const { data: userCredits, error: creditsError } = await supabase.from('user_credits').select('*').eq('user_id', userId).in('user_type', [\n            'individual',\n            'user'\n        ]).gt('credits_balance', 0);\n        console.log('üîç DEBUG: Credit check results:', {\n            userId,\n            userCredits,\n            creditsError,\n            creditsFound: userCredits?.length || 0\n        });\n        if (creditsError) {\n            console.error('‚ùå Error checking user credits:', creditsError);\n            throw new Error('Error checking user credits');\n        }\n        if (!userCredits || userCredits.length === 0) {\n            console.log('‚ùå No credits found for user:', userId);\n            console.log('üîß TESTING MODE: Adding 10 test credits automatically...');\n            // Add test credits for development/testing\n            const { data: newCredits, error: insertError } = await supabase.from('user_credits').insert({\n                user_id: userId,\n                user_type: 'user',\n                credits_balance: 10,\n                credits_purchased: 10,\n                credits_used: 0,\n                credits_expired: 0,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }).select();\n            if (insertError) {\n                console.error('‚ùå Error adding test credits:', insertError);\n                throw new _lib_api_response__WEBPACK_IMPORTED_MODULE_2__.ValidationError('You need to purchase a session package before booking. Please buy credits first.');\n            }\n            console.log('‚úÖ Test credits added successfully:', newCredits);\n        // Continue with the booking process\n        }\n        // 5. Create session datetime objects with GMT+1 timezone\n        const sessionDateTime = new Date(`${session_date}T${start_time}:00+01:00`);\n        const sessionEndTime = new Date(sessionDateTime.getTime() + duration * 60000);\n        // Validate session is in the future (with timezone consideration)\n        const now = new Date();\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const sessionDate = new Date(session_date);\n        console.log('üîç DEBUG: Date validation:', {\n            session_date,\n            start_time,\n            sessionDateTime: sessionDateTime.toISOString(),\n            now: now.toISOString(),\n            today: today.toISOString(),\n            sessionDate: sessionDate.toISOString(),\n            isToday: sessionDate.getTime() === today.getTime(),\n            isPast: sessionDate < today\n        });\n        // Allow booking for today if the time is in the future, or any future date\n        if (sessionDate < today) {\n            throw new _lib_api_response__WEBPACK_IMPORTED_MODULE_2__.ValidationError('Cannot book sessions for past dates');\n        }\n        // If booking for today, check if the time is in the future\n        if (sessionDate.getTime() === today.getTime()) {\n            const currentTime = new Date();\n            const sessionTime = new Date(`${session_date}T${start_time}:00+01:00`);\n            // Add a 60-minute buffer to account for timezone differences and processing time\n            const bufferTime = new Date(currentTime.getTime() + 30 * 60 * 1000) // 30 minutes buffer\n            ;\n            console.log('üîç DEBUG: Today booking validation:', {\n                session_date,\n                start_time,\n                sessionTime: sessionTime.toISOString(),\n                currentTime: currentTime.toISOString(),\n                bufferTime: bufferTime.toISOString(),\n                isPast: sessionTime <= bufferTime\n            });\n            if (sessionTime <= bufferTime) {\n                throw new _lib_api_response__WEBPACK_IMPORTED_MODULE_2__.ValidationError('Cannot book sessions in the past. Please select a future time slot.');\n            }\n        }\n        // 6. Check for scheduling conflicts using AvailabilityManager\n        console.log('üîç DEBUG: Checking availability using AvailabilityManager:', {\n            session_date,\n            start_time,\n            userId,\n            therapist_id\n        });\n        const { AvailabilityManager } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@supabase\"), __webpack_require__.e(\"vendor-chunks/cookie\"), __webpack_require__.e(\"_rsc_lib_availability-manager_ts\")]).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/availability-manager */ \"(rsc)/./lib/availability-manager.ts\"));\n        const availabilityManager = new AvailabilityManager();\n        const availabilityCheck = await availabilityManager.isSlotAvailable(therapist_id, session_date, start_time, duration);\n        console.log('üîç DEBUG: Availability check results:', {\n            available: availabilityCheck.available,\n            conflicts: availabilityCheck.conflicts\n        });\n        if (!availabilityCheck.available) {\n            const conflictMessage = availabilityCheck.conflicts.map((c)=>c.message).join('; ');\n            console.log('‚ùå Availability conflicts found:', conflictMessage);\n            throw new _lib_api_response__WEBPACK_IMPORTED_MODULE_2__.ConflictError(`Time slot is not available: ${conflictMessage}`);\n        }\n        // 7. Availability already verified by AvailabilityManager in step 6\n        console.log('‚úÖ Therapist availability confirmed by AvailabilityManager');\n        // 8. Create the session record with database-level conflict prevention\n        console.log('üîç Creating session record with conflict prevention...');\n        console.log('üîç DEBUG: Creating session with therapist_id:', therapist_id);\n        console.log('üîç DEBUG: Creating session with user_id:', userId);\n        const { data: sessionRecord, error: sessionError } = await supabase.from('sessions').insert({\n            // id: removed - let database generate UUID automatically\n            user_id: userId,\n            therapist_id: therapist_id,\n            title: `Therapy Session - ${userName}`,\n            description: notes || `Booking by ${userName} (${userEmail})`,\n            scheduled_date: session_date,\n            scheduled_time: start_time,\n            end_time: sessionEndTime.toISOString(),\n            duration_minutes: duration,\n            planned_duration_minutes: duration,\n            status: 'scheduled',\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        }).select(`\n        *,\n        therapist:therapist_id (\n          id,\n          full_name,\n          email\n        )\n      `).single();\n        if (sessionError) {\n            console.error('‚ùå Error creating session:', sessionError);\n            throw new Error(`Failed to create session: ${sessionError.message}`);\n        }\n        // Get the generated session ID from the created record\n        const sessionId = sessionRecord.id;\n        console.log('‚úÖ Session created with ID:', sessionId);\n        console.log('üîç DEBUG: Created session record:', sessionRecord);\n        console.log('üîç DEBUG: Session therapist_id:', sessionRecord.therapist_id);\n        console.log('üîç DEBUG: Session user_id:', sessionRecord.user_id);\n        // 9. Create Daily.co room for the session\n        try {\n            const { createTherapySessionRoom } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_daily_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/daily */ \"(rsc)/./lib/daily.ts\"));\n            const room = await createTherapySessionRoom({\n                sessionId: sessionId,\n                therapistName: therapist.full_name,\n                patientName: userName,\n                duration: duration,\n                scheduledTime: sessionDateTime\n            });\n            // Update session with room URL\n            await supabase.from('sessions').update({\n                session_url: room.url,\n                room_name: room.name\n            }).eq('id', sessionId);\n            console.log('‚úÖ Daily.co room created:', room.name);\n        } catch (roomError) {\n            console.error('‚ùå Failed to create Daily.co room:', roomError);\n        // Don't fail the booking if room creation fails\n        }\n        // 10. Deduct credit from user account\n        console.log('üîç DEBUG: Deducting credit for session...');\n        // First, get current credit balance\n        const { data: currentCredits, error: fetchError } = await supabase.from('user_credits').select('credits_balance, credits_used').eq('user_id', userId).single();\n        if (fetchError || !currentCredits) {\n            console.error('‚ùå Error fetching current credits:', fetchError);\n            throw new Error('Unable to verify user credits');\n        }\n        if (currentCredits.credits_balance <= 0) {\n            throw new _lib_api_response__WEBPACK_IMPORTED_MODULE_2__.ValidationError('Insufficient credits to book session');\n        }\n        // Update credits\n        const { error: creditError } = await supabase.from('user_credits').update({\n            credits_balance: currentCredits.credits_balance - 1,\n            credits_used: currentCredits.credits_used + 1,\n            updated_at: new Date().toISOString()\n        }).eq('user_id', userId).eq('credits_balance', currentCredits.credits_balance) // Prevent race conditions\n        ;\n        if (creditError) {\n            console.error('‚ùå Error deducting credit:', creditError);\n            // Don't fail the booking - this can be handled separately\n            console.warn('‚ö†Ô∏è Session created but credit deduction failed - manual intervention required');\n        } else {\n            console.log('‚úÖ Credit deducted successfully');\n        }\n        // 11. TODO: Send confirmation emails/notifications\n        // await sendBookingConfirmation(user, therapist, session)\n        console.log('‚úÖ Session booked successfully:', sessionId);\n        return (0,_lib_api_response__WEBPACK_IMPORTED_MODULE_2__.successResponse)({\n            session: {\n                ...sessionRecord,\n                therapist_name: therapist.full_name,\n                therapist_email: therapist.email\n            }\n        });\n    } catch (error) {\n        return (0,_lib_api_response__WEBPACK_IMPORTED_MODULE_2__.handleApiError)(error);\n    }\n}\n// GET endpoint for retrieving user sessions\nasync function GET(request) {\n    try {\n        // SECURE Authentication Check\n        const authResult = await (0,_lib_server_auth__WEBPACK_IMPORTED_MODULE_1__.requireApiAuth)([\n            'individual'\n        ]);\n        if ('error' in authResult) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(authResult.error, {\n                status: 401\n            });\n        }\n        const { session } = authResult;\n        const { searchParams } = new URL(request.url);\n        const status = searchParams.get('status') || 'all';\n        const limit = Math.min(parseInt(searchParams.get('limit') || '10'), 50) // Max 50 items\n        ;\n        let query = supabase.from('sessions').select(`\n        *,\n        therapist:therapist_id (\n          id,\n          full_name,\n          email\n        )\n      `).eq('user_id', session.user.id) // Use verified user ID from session\n        .order('start_time', {\n            ascending: true\n        }).limit(limit);\n        if (status !== 'all') {\n            query = query.eq('status', status);\n        }\n        const { data: sessions, error } = await query;\n        if (error) {\n            console.error('Error fetching sessions:', error);\n            throw new Error('Failed to fetch sessions');\n        }\n        return (0,_lib_api_response__WEBPACK_IMPORTED_MODULE_2__.successResponse)({\n            sessions: sessions || []\n        });\n    } catch (error) {\n        return (0,_lib_api_response__WEBPACK_IMPORTED_MODULE_2__.handleApiError)(error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEtBQUssRUFBRTtnQkFBRUMsUUFBUTtZQUFJO1FBQzNEO1FBRUEsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0o7UUFDcEIsTUFBTSxFQUFFcUcsWUFBWSxFQUFFLEdBQUcsSUFBSUMsSUFBSXZHLFFBQVEyRixHQUFHO1FBQzVDLE1BQU12RixTQUFTa0csYUFBYUUsR0FBRyxDQUFDLGFBQWE7UUFDN0MsTUFBTUMsUUFBUUMsS0FBS0MsR0FBRyxDQUFDQyxTQUFTTixhQUFhRSxHQUFHLENBQUMsWUFBWSxPQUFPLElBQUksZUFBZTs7UUFFdkYsSUFBSUssUUFBUW5ILFNBQ1QrQixJQUFJLENBQUMsWUFDTEMsTUFBTSxDQUFDLENBQUM7Ozs7Ozs7TUFPVCxDQUFDLEVBQ0FDLEVBQUUsQ0FBQyxXQUFXdEIsUUFBUUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsb0NBQW9DO1NBQ25Fc0csS0FBSyxDQUFDLGNBQWM7WUFBRUMsV0FBVztRQUFLLEdBQ3RDTixLQUFLLENBQUNBO1FBRVQsSUFBSXJHLFdBQVcsT0FBTztZQUNwQnlHLFFBQVFBLE1BQU1sRixFQUFFLENBQUMsVUFBVXZCO1FBQzdCO1FBRUEsTUFBTSxFQUFFa0IsTUFBTTBGLFFBQVEsRUFBRTdHLEtBQUssRUFBRSxHQUFHLE1BQU0wRztRQUV4QyxJQUFJMUcsT0FBTztZQUNUaUIsUUFBUWpCLEtBQUssQ0FBQyw0QkFBNEJBO1lBQzFDLE1BQU0sSUFBSWdDLE1BQU07UUFDbEI7UUFFQSxPQUFPM0Msa0VBQWVBLENBQUM7WUFDckJ3SCxVQUFVQSxZQUFZLEVBQUU7UUFDMUI7SUFFRixFQUFFLE9BQU83RyxPQUFPO1FBQ2QsT0FBT2YsaUVBQWNBLENBQUNlO0lBQ3hCO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL0Rlc2t0b3AvdHJwaS1hcHAvYXBwL2FwaS9zZXNzaW9ucy9ib29rL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcbmltcG9ydCB7IHJlcXVpcmVBcGlBdXRoIH0gZnJvbSAnQC9saWIvc2VydmVyLWF1dGgnXG5pbXBvcnQgeyBoYW5kbGVBcGlFcnJvciwgVmFsaWRhdGlvbkVycm9yLCBDb25mbGljdEVycm9yLCBOb3RGb3VuZEVycm9yLCBzdWNjZXNzUmVzcG9uc2UsIHZhbGlkYXRlUmVxdWlyZWQgfSBmcm9tICdAL2xpYi9hcGktcmVzcG9uc2UnXG5cbmNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KFxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxuICBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIVxuKVxuXG4vLyBUeXBlcyBmb3IgYmV0dGVyIHR5cGUgc2FmZXR5XG5pbnRlcmZhY2UgQm9va2luZ1JlcXVlc3Qge1xuICB0aGVyYXBpc3RfaWQ6IHN0cmluZ1xuICBzZXNzaW9uX2RhdGU6IHN0cmluZyAvLyBZWVlZLU1NLUREXG4gIHN0YXJ0X3RpbWU6IHN0cmluZyAvLyBISDpNTVxuICBkdXJhdGlvbj86IG51bWJlciAvLyBtaW51dGVzLCBkZWZhdWx0IDMwXG4gIHNlc3Npb25fdHlwZT86ICd2aWRlbycgfCAnYXVkaW8nIHwgJ2NoYXQnXG4gIG5vdGVzPzogc3RyaW5nXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KTogUHJvbWlzZTxOZXh0UmVzcG9uc2U+IHtcbiAgdHJ5IHtcbiAgICAvLyAxLiBTRUNVUkUgQXV0aGVudGljYXRpb24gQ2hlY2sgLSB2ZXJpZnkgc2VydmVyLXNpZGUgc2Vzc2lvblxuICAgIGNvbnN0IGF1dGhSZXN1bHQgPSBhd2FpdCByZXF1aXJlQXBpQXV0aChbJ2luZGl2aWR1YWwnXSlcbiAgICBpZiAoJ2Vycm9yJyBpbiBhdXRoUmVzdWx0KSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oYXV0aFJlc3VsdC5lcnJvciwgeyBzdGF0dXM6IDQwMSB9KVxuICAgIH1cblxuICAgIGNvbnN0IHsgc2Vzc2lvbiB9ID0gYXV0aFJlc3VsdFxuICAgIGNvbnN0IHVzZXJJZCA9IHNlc3Npb24udXNlci5pZCAvLyBUaGlzIGlzIG5vdyBUUlVTVEVEIGFuZCB2ZXJpZmllZFxuICAgIGNvbnN0IHVzZXJFbWFpbCA9IHNlc3Npb24udXNlci5lbWFpbFxuICAgIGNvbnN0IHVzZXJOYW1lID0gc2Vzc2lvbi51c2VyLmZ1bGxfbmFtZVxuXG4gICAgLy8gMi4gUGFyc2UgYW5kIHZhbGlkYXRlIHJlcXVlc3RcbiAgICBjb25zdCByZXF1ZXN0RGF0YTogQm9va2luZ1JlcXVlc3QgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuICAgIFxuICAgIC8vIFVzZSBjZW50cmFsaXplZCB2YWxpZGF0aW9uXG4gICAgdmFsaWRhdGVSZXF1aXJlZChyZXF1ZXN0RGF0YSwgWyd0aGVyYXBpc3RfaWQnLCAnc2Vzc2lvbl9kYXRlJywgJ3N0YXJ0X3RpbWUnXSlcbiAgICBcbiAgICBjb25zdCB7XG4gICAgICB0aGVyYXBpc3RfaWQsXG4gICAgICBzZXNzaW9uX2RhdGUsXG4gICAgICBzdGFydF90aW1lLFxuICAgICAgZHVyYXRpb24gPSAzMCwgLy8gRGVmYXVsdCB0byAzMCBtaW51dGVzIGZvciB0aGVyYXB5IHNlc3Npb25cbiAgICAgIHNlc3Npb25fdHlwZSA9ICd2aWRlbycsXG4gICAgICBub3RlcyA9ICcnXG4gICAgfSA9IHJlcXVlc3REYXRhXG5cbiAgICBjb25zb2xlLmxvZygn8J+UhCBQcm9jZXNzaW5nIGJvb2tpbmcgcmVxdWVzdDonLCB7XG4gICAgICB1c2VySWQsXG4gICAgICB1c2VyRW1haWwsXG4gICAgICB0aGVyYXBpc3RfaWQsXG4gICAgICBzZXNzaW9uX2RhdGUsXG4gICAgICBzdGFydF90aW1lXG4gICAgfSlcbiAgICBcbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogVGhlcmFwaXN0IElEIHR5cGU6JywgdHlwZW9mIHRoZXJhcGlzdF9pZClcbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogVGhlcmFwaXN0IElEIHZhbHVlOicsIHRoZXJhcGlzdF9pZClcblxuICAgIC8vIDMuIFZhbGlkYXRlIHRoZXJhcGlzdCBleGlzdHMgYW5kIGlzIGF2YWlsYWJsZVxuICAgIGNvbnNvbGUubG9nKCfwn5SNIERFQlVHOiBMb29raW5nIGZvciB0aGVyYXBpc3Qgd2l0aCBJRDonLCB0aGVyYXBpc3RfaWQpXG4gICAgXG4gICAgY29uc3QgeyBkYXRhOiB0aGVyYXBpc3QsIGVycm9yOiB0aGVyYXBpc3RFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd1c2VycycpXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgaWQsXG4gICAgICAgIGZ1bGxfbmFtZSxcbiAgICAgICAgZW1haWwsXG4gICAgICAgIHVzZXJfdHlwZSxcbiAgICAgICAgaXNfYWN0aXZlLFxuICAgICAgICBpc192ZXJpZmllZCxcbiAgICAgICAgdGhlcmFwaXN0X3Byb2ZpbGVzIWlubmVyIChcbiAgICAgICAgICB2ZXJpZmljYXRpb25fc3RhdHVzLFxuICAgICAgICAgIGlzX3ZlcmlmaWVkXG4gICAgICAgIClcbiAgICAgIGApXG4gICAgICAuZXEoJ2lkJywgdGhlcmFwaXN0X2lkKVxuICAgICAgLmVxKCd1c2VyX3R5cGUnLCAndGhlcmFwaXN0JylcbiAgICAgIC5lcSgnaXNfYWN0aXZlJywgdHJ1ZSlcbiAgICAgIC5lcSgnaXNfdmVyaWZpZWQnLCB0cnVlKVxuICAgICAgLmVxKCd0aGVyYXBpc3RfcHJvZmlsZXMudmVyaWZpY2F0aW9uX3N0YXR1cycsICdhcHByb3ZlZCcpXG4gICAgICAuc2luZ2xlKClcblxuICAgIGNvbnNvbGUubG9nKCfwn5SNIERFQlVHOiBUaGVyYXBpc3QgcXVlcnkgcmVzdWx0OicsIHsgdGhlcmFwaXN0LCB0aGVyYXBpc3RFcnJvciB9KVxuXG4gICAgaWYgKHRoZXJhcGlzdEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgVGhlcmFwaXN0IHF1ZXJ5IGVycm9yOicsIHRoZXJhcGlzdEVycm9yKVxuICAgICAgdGhyb3cgbmV3IE5vdEZvdW5kRXJyb3IoJ1RoZXJhcGlzdCBub3QgZm91bmQgb3Igbm90IGF2YWlsYWJsZScpXG4gICAgfVxuXG4gICAgaWYgKCF0aGVyYXBpc3QpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBObyB0aGVyYXBpc3QgZm91bmQgd2l0aCBJRDonLCB0aGVyYXBpc3RfaWQpXG4gICAgICB0aHJvdyBuZXcgTm90Rm91bmRFcnJvcignVGhlcmFwaXN0IG5vdCBmb3VuZCBvciBub3QgYXZhaWxhYmxlJylcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZygn4pyFIFRoZXJhcGlzdCBmb3VuZDonLCB0aGVyYXBpc3QuZnVsbF9uYW1lKVxuXG4gICAgLy8gNC4gQ2hlY2sgaWYgdXNlciBoYXMgYXZhaWxhYmxlIGNyZWRpdHMgKGNoZWNrIGJvdGggJ2luZGl2aWR1YWwnIGFuZCAndXNlcicgdHlwZXMpXG4gICAgY29uc3QgeyBkYXRhOiB1c2VyQ3JlZGl0cywgZXJyb3I6IGNyZWRpdHNFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd1c2VyX2NyZWRpdHMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXG4gICAgICAuaW4oJ3VzZXJfdHlwZScsIFsnaW5kaXZpZHVhbCcsICd1c2VyJ10pXG4gICAgICAuZ3QoJ2NyZWRpdHNfYmFsYW5jZScsIDApXG5cbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogQ3JlZGl0IGNoZWNrIHJlc3VsdHM6Jywge1xuICAgICAgdXNlcklkLFxuICAgICAgdXNlckNyZWRpdHMsXG4gICAgICBjcmVkaXRzRXJyb3IsXG4gICAgICBjcmVkaXRzRm91bmQ6IHVzZXJDcmVkaXRzPy5sZW5ndGggfHwgMFxuICAgIH0pXG5cbiAgICBpZiAoY3JlZGl0c0Vycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgRXJyb3IgY2hlY2tpbmcgdXNlciBjcmVkaXRzOicsIGNyZWRpdHNFcnJvcilcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgY2hlY2tpbmcgdXNlciBjcmVkaXRzJylcbiAgICB9XG5cbiAgICBpZiAoIXVzZXJDcmVkaXRzIHx8IHVzZXJDcmVkaXRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc29sZS5sb2coJ+KdjCBObyBjcmVkaXRzIGZvdW5kIGZvciB1c2VyOicsIHVzZXJJZClcbiAgICAgIGNvbnNvbGUubG9nKCfwn5SnIFRFU1RJTkcgTU9ERTogQWRkaW5nIDEwIHRlc3QgY3JlZGl0cyBhdXRvbWF0aWNhbGx5Li4uJylcbiAgICAgIFxuICAgICAgLy8gQWRkIHRlc3QgY3JlZGl0cyBmb3IgZGV2ZWxvcG1lbnQvdGVzdGluZ1xuICAgICAgY29uc3QgeyBkYXRhOiBuZXdDcmVkaXRzLCBlcnJvcjogaW5zZXJ0RXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCd1c2VyX2NyZWRpdHMnKVxuICAgICAgICAuaW5zZXJ0KHtcbiAgICAgICAgICB1c2VyX2lkOiB1c2VySWQsXG4gICAgICAgICAgdXNlcl90eXBlOiAndXNlcicsXG4gICAgICAgICAgY3JlZGl0c19iYWxhbmNlOiAxMCxcbiAgICAgICAgICBjcmVkaXRzX3B1cmNoYXNlZDogMTAsXG4gICAgICAgICAgY3JlZGl0c191c2VkOiAwLFxuICAgICAgICAgIGNyZWRpdHNfZXhwaXJlZDogMCxcbiAgICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICAgIH0pXG4gICAgICAgIC5zZWxlY3QoKVxuICAgICAgXG4gICAgICBpZiAoaW5zZXJ0RXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGFkZGluZyB0ZXN0IGNyZWRpdHM6JywgaW5zZXJ0RXJyb3IpXG4gICAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoJ1lvdSBuZWVkIHRvIHB1cmNoYXNlIGEgc2Vzc2lvbiBwYWNrYWdlIGJlZm9yZSBib29raW5nLiBQbGVhc2UgYnV5IGNyZWRpdHMgZmlyc3QuJylcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ+KchSBUZXN0IGNyZWRpdHMgYWRkZWQgc3VjY2Vzc2Z1bGx5OicsIG5ld0NyZWRpdHMpXG4gICAgICAvLyBDb250aW51ZSB3aXRoIHRoZSBib29raW5nIHByb2Nlc3NcbiAgICB9XG5cbiAgICAvLyA1LiBDcmVhdGUgc2Vzc2lvbiBkYXRldGltZSBvYmplY3RzIHdpdGggR01UKzEgdGltZXpvbmVcbiAgICBjb25zdCBzZXNzaW9uRGF0ZVRpbWUgPSBuZXcgRGF0ZShgJHtzZXNzaW9uX2RhdGV9VCR7c3RhcnRfdGltZX06MDArMDE6MDBgKVxuICAgIGNvbnN0IHNlc3Npb25FbmRUaW1lID0gbmV3IERhdGUoc2Vzc2lvbkRhdGVUaW1lLmdldFRpbWUoKSArIGR1cmF0aW9uICogNjAwMDApXG5cbiAgICAvLyBWYWxpZGF0ZSBzZXNzaW9uIGlzIGluIHRoZSBmdXR1cmUgKHdpdGggdGltZXpvbmUgY29uc2lkZXJhdGlvbilcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpXG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCksIG5vdy5nZXREYXRlKCkpXG4gICAgY29uc3Qgc2Vzc2lvbkRhdGUgPSBuZXcgRGF0ZShzZXNzaW9uX2RhdGUpXG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CflI0gREVCVUc6IERhdGUgdmFsaWRhdGlvbjonLCB7XG4gICAgICBzZXNzaW9uX2RhdGUsXG4gICAgICBzdGFydF90aW1lLFxuICAgICAgc2Vzc2lvbkRhdGVUaW1lOiBzZXNzaW9uRGF0ZVRpbWUudG9JU09TdHJpbmcoKSxcbiAgICAgIG5vdzogbm93LnRvSVNPU3RyaW5nKCksXG4gICAgICB0b2RheTogdG9kYXkudG9JU09TdHJpbmcoKSxcbiAgICAgIHNlc3Npb25EYXRlOiBzZXNzaW9uRGF0ZS50b0lTT1N0cmluZygpLFxuICAgICAgaXNUb2RheTogc2Vzc2lvbkRhdGUuZ2V0VGltZSgpID09PSB0b2RheS5nZXRUaW1lKCksXG4gICAgICBpc1Bhc3Q6IHNlc3Npb25EYXRlIDwgdG9kYXlcbiAgICB9KVxuXG4gICAgLy8gQWxsb3cgYm9va2luZyBmb3IgdG9kYXkgaWYgdGhlIHRpbWUgaXMgaW4gdGhlIGZ1dHVyZSwgb3IgYW55IGZ1dHVyZSBkYXRlXG4gICAgaWYgKHNlc3Npb25EYXRlIDwgdG9kYXkpIHtcbiAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoJ0Nhbm5vdCBib29rIHNlc3Npb25zIGZvciBwYXN0IGRhdGVzJylcbiAgICB9XG4gICAgXG4gICAgLy8gSWYgYm9va2luZyBmb3IgdG9kYXksIGNoZWNrIGlmIHRoZSB0aW1lIGlzIGluIHRoZSBmdXR1cmVcbiAgICBpZiAoc2Vzc2lvbkRhdGUuZ2V0VGltZSgpID09PSB0b2RheS5nZXRUaW1lKCkpIHtcbiAgICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gbmV3IERhdGUoKVxuICAgICAgY29uc3Qgc2Vzc2lvblRpbWUgPSBuZXcgRGF0ZShgJHtzZXNzaW9uX2RhdGV9VCR7c3RhcnRfdGltZX06MDArMDE6MDBgKVxuICAgICAgXG4gICAgICAvLyBBZGQgYSA2MC1taW51dGUgYnVmZmVyIHRvIGFjY291bnQgZm9yIHRpbWV6b25lIGRpZmZlcmVuY2VzIGFuZCBwcm9jZXNzaW5nIHRpbWVcbiAgICAgIGNvbnN0IGJ1ZmZlclRpbWUgPSBuZXcgRGF0ZShjdXJyZW50VGltZS5nZXRUaW1lKCkgKyAzMCAqIDYwICogMTAwMCkgLy8gMzAgbWludXRlcyBidWZmZXJcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ/CflI0gREVCVUc6IFRvZGF5IGJvb2tpbmcgdmFsaWRhdGlvbjonLCB7XG4gICAgICAgIHNlc3Npb25fZGF0ZSxcbiAgICAgICAgc3RhcnRfdGltZSxcbiAgICAgICAgc2Vzc2lvblRpbWU6IHNlc3Npb25UaW1lLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIGN1cnJlbnRUaW1lOiBjdXJyZW50VGltZS50b0lTT1N0cmluZygpLFxuICAgICAgICBidWZmZXJUaW1lOiBidWZmZXJUaW1lLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIGlzUGFzdDogc2Vzc2lvblRpbWUgPD0gYnVmZmVyVGltZVxuICAgICAgfSlcbiAgICAgIFxuICAgICAgaWYgKHNlc3Npb25UaW1lIDw9IGJ1ZmZlclRpbWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcignQ2Fubm90IGJvb2sgc2Vzc2lvbnMgaW4gdGhlIHBhc3QuIFBsZWFzZSBzZWxlY3QgYSBmdXR1cmUgdGltZSBzbG90LicpXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gNi4gQ2hlY2sgZm9yIHNjaGVkdWxpbmcgY29uZmxpY3RzIHVzaW5nIEF2YWlsYWJpbGl0eU1hbmFnZXJcbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogQ2hlY2tpbmcgYXZhaWxhYmlsaXR5IHVzaW5nIEF2YWlsYWJpbGl0eU1hbmFnZXI6Jywge1xuICAgICAgc2Vzc2lvbl9kYXRlLFxuICAgICAgc3RhcnRfdGltZSxcbiAgICAgIHVzZXJJZCxcbiAgICAgIHRoZXJhcGlzdF9pZFxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgeyBBdmFpbGFiaWxpdHlNYW5hZ2VyIH0gPSBhd2FpdCBpbXBvcnQoJ0AvbGliL2F2YWlsYWJpbGl0eS1tYW5hZ2VyJylcbiAgICBjb25zdCBhdmFpbGFiaWxpdHlNYW5hZ2VyID0gbmV3IEF2YWlsYWJpbGl0eU1hbmFnZXIoKVxuICAgIFxuICAgIGNvbnN0IGF2YWlsYWJpbGl0eUNoZWNrID0gYXdhaXQgYXZhaWxhYmlsaXR5TWFuYWdlci5pc1Nsb3RBdmFpbGFibGUoXG4gICAgICB0aGVyYXBpc3RfaWQsXG4gICAgICBzZXNzaW9uX2RhdGUsXG4gICAgICBzdGFydF90aW1lLFxuICAgICAgZHVyYXRpb25cbiAgICApXG5cbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogQXZhaWxhYmlsaXR5IGNoZWNrIHJlc3VsdHM6Jywge1xuICAgICAgYXZhaWxhYmxlOiBhdmFpbGFiaWxpdHlDaGVjay5hdmFpbGFibGUsXG4gICAgICBjb25mbGljdHM6IGF2YWlsYWJpbGl0eUNoZWNrLmNvbmZsaWN0c1xuICAgIH0pXG5cbiAgICBpZiAoIWF2YWlsYWJpbGl0eUNoZWNrLmF2YWlsYWJsZSkge1xuICAgICAgY29uc3QgY29uZmxpY3RNZXNzYWdlID0gYXZhaWxhYmlsaXR5Q2hlY2suY29uZmxpY3RzXG4gICAgICAgIC5tYXAoYyA9PiBjLm1lc3NhZ2UpXG4gICAgICAgIC5qb2luKCc7ICcpXG4gICAgICBjb25zb2xlLmxvZygn4p2MIEF2YWlsYWJpbGl0eSBjb25mbGljdHMgZm91bmQ6JywgY29uZmxpY3RNZXNzYWdlKVxuICAgICAgdGhyb3cgbmV3IENvbmZsaWN0RXJyb3IoYFRpbWUgc2xvdCBpcyBub3QgYXZhaWxhYmxlOiAke2NvbmZsaWN0TWVzc2FnZX1gKVxuICAgIH1cblxuICAgIC8vIDcuIEF2YWlsYWJpbGl0eSBhbHJlYWR5IHZlcmlmaWVkIGJ5IEF2YWlsYWJpbGl0eU1hbmFnZXIgaW4gc3RlcCA2XG4gICAgY29uc29sZS5sb2coJ+KchSBUaGVyYXBpc3QgYXZhaWxhYmlsaXR5IGNvbmZpcm1lZCBieSBBdmFpbGFiaWxpdHlNYW5hZ2VyJylcblxuICAgIC8vIDguIENyZWF0ZSB0aGUgc2Vzc2lvbiByZWNvcmQgd2l0aCBkYXRhYmFzZS1sZXZlbCBjb25mbGljdCBwcmV2ZW50aW9uXG4gICAgY29uc29sZS5sb2coJ/CflI0gQ3JlYXRpbmcgc2Vzc2lvbiByZWNvcmQgd2l0aCBjb25mbGljdCBwcmV2ZW50aW9uLi4uJylcbiAgICBcbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogQ3JlYXRpbmcgc2Vzc2lvbiB3aXRoIHRoZXJhcGlzdF9pZDonLCB0aGVyYXBpc3RfaWQpXG4gICAgY29uc29sZS5sb2coJ/CflI0gREVCVUc6IENyZWF0aW5nIHNlc3Npb24gd2l0aCB1c2VyX2lkOicsIHVzZXJJZClcbiAgICBcbiAgICBjb25zdCB7IGRhdGE6IHNlc3Npb25SZWNvcmQsIGVycm9yOiBzZXNzaW9uRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgnc2Vzc2lvbnMnKVxuICAgICAgLmluc2VydCh7XG4gICAgICAgIC8vIGlkOiByZW1vdmVkIC0gbGV0IGRhdGFiYXNlIGdlbmVyYXRlIFVVSUQgYXV0b21hdGljYWxseVxuICAgICAgICB1c2VyX2lkOiB1c2VySWQsXG4gICAgICAgIHRoZXJhcGlzdF9pZDogdGhlcmFwaXN0X2lkLFxuICAgICAgICB0aXRsZTogYFRoZXJhcHkgU2Vzc2lvbiAtICR7dXNlck5hbWV9YCxcbiAgICAgICAgZGVzY3JpcHRpb246IG5vdGVzIHx8IGBCb29raW5nIGJ5ICR7dXNlck5hbWV9ICgke3VzZXJFbWFpbH0pYCxcbiAgICAgICAgc2NoZWR1bGVkX2RhdGU6IHNlc3Npb25fZGF0ZSxcbiAgICAgICAgc2NoZWR1bGVkX3RpbWU6IHN0YXJ0X3RpbWUsXG4gICAgICAgIGVuZF90aW1lOiBzZXNzaW9uRW5kVGltZS50b0lTT1N0cmluZygpLFxuICAgICAgICBkdXJhdGlvbl9taW51dGVzOiBkdXJhdGlvbixcbiAgICAgICAgcGxhbm5lZF9kdXJhdGlvbl9taW51dGVzOiBkdXJhdGlvbixcbiAgICAgICAgc3RhdHVzOiAnc2NoZWR1bGVkJyxcbiAgICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH0pXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgKixcbiAgICAgICAgdGhlcmFwaXN0OnRoZXJhcGlzdF9pZCAoXG4gICAgICAgICAgaWQsXG4gICAgICAgICAgZnVsbF9uYW1lLFxuICAgICAgICAgIGVtYWlsXG4gICAgICAgIClcbiAgICAgIGApXG4gICAgICAuc2luZ2xlKClcblxuICAgIGlmIChzZXNzaW9uRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBjcmVhdGluZyBzZXNzaW9uOicsIHNlc3Npb25FcnJvcilcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGNyZWF0ZSBzZXNzaW9uOiAke3Nlc3Npb25FcnJvci5tZXNzYWdlfWApXG4gICAgfVxuXG4gICAgLy8gR2V0IHRoZSBnZW5lcmF0ZWQgc2Vzc2lvbiBJRCBmcm9tIHRoZSBjcmVhdGVkIHJlY29yZFxuICAgIGNvbnN0IHNlc3Npb25JZCA9IHNlc3Npb25SZWNvcmQuaWRcbiAgICBjb25zb2xlLmxvZygn4pyFIFNlc3Npb24gY3JlYXRlZCB3aXRoIElEOicsIHNlc3Npb25JZClcbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogQ3JlYXRlZCBzZXNzaW9uIHJlY29yZDonLCBzZXNzaW9uUmVjb3JkKVxuICAgIGNvbnNvbGUubG9nKCfwn5SNIERFQlVHOiBTZXNzaW9uIHRoZXJhcGlzdF9pZDonLCBzZXNzaW9uUmVjb3JkLnRoZXJhcGlzdF9pZClcbiAgICBjb25zb2xlLmxvZygn8J+UjSBERUJVRzogU2Vzc2lvbiB1c2VyX2lkOicsIHNlc3Npb25SZWNvcmQudXNlcl9pZClcblxuICAgIC8vIDkuIENyZWF0ZSBEYWlseS5jbyByb29tIGZvciB0aGUgc2Vzc2lvblxuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGNyZWF0ZVRoZXJhcHlTZXNzaW9uUm9vbSB9ID0gYXdhaXQgaW1wb3J0KCdAL2xpYi9kYWlseScpXG4gICAgICBjb25zdCByb29tID0gYXdhaXQgY3JlYXRlVGhlcmFweVNlc3Npb25Sb29tKHtcbiAgICAgICAgc2Vzc2lvbklkOiBzZXNzaW9uSWQsXG4gICAgICAgIHRoZXJhcGlzdE5hbWU6IHRoZXJhcGlzdC5mdWxsX25hbWUsXG4gICAgICAgIHBhdGllbnROYW1lOiB1c2VyTmFtZSxcbiAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLFxuICAgICAgICBzY2hlZHVsZWRUaW1lOiBzZXNzaW9uRGF0ZVRpbWVcbiAgICAgIH0pXG5cbiAgICAgIC8vIFVwZGF0ZSBzZXNzaW9uIHdpdGggcm9vbSBVUkxcbiAgICAgIGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCdzZXNzaW9ucycpXG4gICAgICAgIC51cGRhdGUoeyBcbiAgICAgICAgICBzZXNzaW9uX3VybDogcm9vbS51cmwsXG4gICAgICAgICAgcm9vbV9uYW1lOiByb29tLm5hbWVcbiAgICAgICAgfSlcbiAgICAgICAgLmVxKCdpZCcsIHNlc3Npb25JZClcblxuICAgICAgY29uc29sZS5sb2coJ+KchSBEYWlseS5jbyByb29tIGNyZWF0ZWQ6Jywgcm9vbS5uYW1lKVxuICAgIH0gY2F0Y2ggKHJvb21FcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIEZhaWxlZCB0byBjcmVhdGUgRGFpbHkuY28gcm9vbTonLCByb29tRXJyb3IpXG4gICAgICAvLyBEb24ndCBmYWlsIHRoZSBib29raW5nIGlmIHJvb20gY3JlYXRpb24gZmFpbHNcbiAgICB9XG5cbiAgICAvLyAxMC4gRGVkdWN0IGNyZWRpdCBmcm9tIHVzZXIgYWNjb3VudFxuICAgIGNvbnNvbGUubG9nKCfwn5SNIERFQlVHOiBEZWR1Y3RpbmcgY3JlZGl0IGZvciBzZXNzaW9uLi4uJylcbiAgICBcbiAgICAvLyBGaXJzdCwgZ2V0IGN1cnJlbnQgY3JlZGl0IGJhbGFuY2VcbiAgICBjb25zdCB7IGRhdGE6IGN1cnJlbnRDcmVkaXRzLCBlcnJvcjogZmV0Y2hFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd1c2VyX2NyZWRpdHMnKVxuICAgICAgLnNlbGVjdCgnY3JlZGl0c19iYWxhbmNlLCBjcmVkaXRzX3VzZWQnKVxuICAgICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZmV0Y2hFcnJvciB8fCAhY3VycmVudENyZWRpdHMpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBmZXRjaGluZyBjdXJyZW50IGNyZWRpdHM6JywgZmV0Y2hFcnJvcilcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5hYmxlIHRvIHZlcmlmeSB1c2VyIGNyZWRpdHMnKVxuICAgIH1cblxuICAgIGlmIChjdXJyZW50Q3JlZGl0cy5jcmVkaXRzX2JhbGFuY2UgPD0gMCkge1xuICAgICAgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcignSW5zdWZmaWNpZW50IGNyZWRpdHMgdG8gYm9vayBzZXNzaW9uJylcbiAgICB9XG5cbiAgICAvLyBVcGRhdGUgY3JlZGl0c1xuICAgIGNvbnN0IHsgZXJyb3I6IGNyZWRpdEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJfY3JlZGl0cycpXG4gICAgICAudXBkYXRlKHtcbiAgICAgICAgY3JlZGl0c19iYWxhbmNlOiBjdXJyZW50Q3JlZGl0cy5jcmVkaXRzX2JhbGFuY2UgLSAxLFxuICAgICAgICBjcmVkaXRzX3VzZWQ6IGN1cnJlbnRDcmVkaXRzLmNyZWRpdHNfdXNlZCArIDEsXG4gICAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgfSlcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZClcbiAgICAgIC5lcSgnY3JlZGl0c19iYWxhbmNlJywgY3VycmVudENyZWRpdHMuY3JlZGl0c19iYWxhbmNlKSAvLyBQcmV2ZW50IHJhY2UgY29uZGl0aW9uc1xuXG4gICAgaWYgKGNyZWRpdEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgRXJyb3IgZGVkdWN0aW5nIGNyZWRpdDonLCBjcmVkaXRFcnJvcilcbiAgICAgIC8vIERvbid0IGZhaWwgdGhlIGJvb2tpbmcgLSB0aGlzIGNhbiBiZSBoYW5kbGVkIHNlcGFyYXRlbHlcbiAgICAgIGNvbnNvbGUud2Fybign4pqg77iPIFNlc3Npb24gY3JlYXRlZCBidXQgY3JlZGl0IGRlZHVjdGlvbiBmYWlsZWQgLSBtYW51YWwgaW50ZXJ2ZW50aW9uIHJlcXVpcmVkJylcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ+KchSBDcmVkaXQgZGVkdWN0ZWQgc3VjY2Vzc2Z1bGx5JylcbiAgICB9XG5cbiAgICAvLyAxMS4gVE9ETzogU2VuZCBjb25maXJtYXRpb24gZW1haWxzL25vdGlmaWNhdGlvbnNcbiAgICAvLyBhd2FpdCBzZW5kQm9va2luZ0NvbmZpcm1hdGlvbih1c2VyLCB0aGVyYXBpc3QsIHNlc3Npb24pXG5cbiAgICBjb25zb2xlLmxvZygn4pyFIFNlc3Npb24gYm9va2VkIHN1Y2Nlc3NmdWxseTonLCBzZXNzaW9uSWQpXG5cbiAgICByZXR1cm4gc3VjY2Vzc1Jlc3BvbnNlKHtcbiAgICAgIHNlc3Npb246IHtcbiAgICAgICAgLi4uc2Vzc2lvblJlY29yZCxcbiAgICAgICAgdGhlcmFwaXN0X25hbWU6IHRoZXJhcGlzdC5mdWxsX25hbWUsXG4gICAgICAgIHRoZXJhcGlzdF9lbWFpbDogdGhlcmFwaXN0LmVtYWlsXG4gICAgICB9XG4gICAgfSlcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBoYW5kbGVBcGlFcnJvcihlcnJvcilcbiAgfVxufVxuXG4vLyBHRVQgZW5kcG9pbnQgZm9yIHJldHJpZXZpbmcgdXNlciBzZXNzaW9uc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIFNFQ1VSRSBBdXRoZW50aWNhdGlvbiBDaGVja1xuICAgIGNvbnN0IGF1dGhSZXN1bHQgPSBhd2FpdCByZXF1aXJlQXBpQXV0aChbJ2luZGl2aWR1YWwnXSlcbiAgICBpZiAoJ2Vycm9yJyBpbiBhdXRoUmVzdWx0KSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oYXV0aFJlc3VsdC5lcnJvciwgeyBzdGF0dXM6IDQwMSB9KVxuICAgIH1cblxuICAgIGNvbnN0IHsgc2Vzc2lvbiB9ID0gYXV0aFJlc3VsdFxuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKVxuICAgIGNvbnN0IHN0YXR1cyA9IHNlYXJjaFBhcmFtcy5nZXQoJ3N0YXR1cycpIHx8ICdhbGwnXG4gICAgY29uc3QgbGltaXQgPSBNYXRoLm1pbihwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KCdsaW1pdCcpIHx8ICcxMCcpLCA1MCkgLy8gTWF4IDUwIGl0ZW1zXG5cbiAgICBsZXQgcXVlcnkgPSBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3Nlc3Npb25zJylcbiAgICAgIC5zZWxlY3QoYFxuICAgICAgICAqLFxuICAgICAgICB0aGVyYXBpc3Q6dGhlcmFwaXN0X2lkIChcbiAgICAgICAgICBpZCxcbiAgICAgICAgICBmdWxsX25hbWUsXG4gICAgICAgICAgZW1haWxcbiAgICAgICAgKVxuICAgICAgYClcbiAgICAgIC5lcSgndXNlcl9pZCcsIHNlc3Npb24udXNlci5pZCkgLy8gVXNlIHZlcmlmaWVkIHVzZXIgSUQgZnJvbSBzZXNzaW9uXG4gICAgICAub3JkZXIoJ3N0YXJ0X3RpbWUnLCB7IGFzY2VuZGluZzogdHJ1ZSB9KVxuICAgICAgLmxpbWl0KGxpbWl0KVxuXG4gICAgaWYgKHN0YXR1cyAhPT0gJ2FsbCcpIHtcbiAgICAgIHF1ZXJ5ID0gcXVlcnkuZXEoJ3N0YXR1cycsIHN0YXR1cylcbiAgICB9XG5cbiAgICBjb25zdCB7IGRhdGE6IHNlc3Npb25zLCBlcnJvciB9ID0gYXdhaXQgcXVlcnlcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgc2Vzc2lvbnM6JywgZXJyb3IpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBzZXNzaW9ucycpXG4gICAgfVxuXG4gICAgcmV0dXJuIHN1Y2Nlc3NSZXNwb25zZSh7XG4gICAgICBzZXNzaW9uczogc2Vzc2lvbnMgfHwgW11cbiAgICB9KVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIGhhbmRsZUFwaUVycm9yKGVycm9yKVxuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImNyZWF0ZUNsaWVudCIsInJlcXVpcmVBcGlBdXRoIiwiaGFuZGxlQXBpRXJyb3IiLCJWYWxpZGF0aW9uRXJyb3IiLCJDb25mbGljdEVycm9yIiwiTm90Rm91bmRFcnJvciIsInN1Y2Nlc3NSZXNwb25zZSIsInZhbGlkYXRlUmVxdWlyZWQiLCJzdXBhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiUE9TVCIsInJlcXVlc3QiLCJhdXRoUmVzdWx0IiwianNvbiIsImVycm9yIiwic3RhdHVzIiwic2Vzc2lvbiIsInVzZXJJZCIsInVzZXIiLCJpZCIsInVzZXJFbWFpbCIsImVtYWlsIiwidXNlck5hbWUiLCJmdWxsX25hbWUiLCJyZXF1ZXN0RGF0YSIsInRoZXJhcGlzdF9pZCIsInNlc3Npb25fZGF0ZSIsInN0YXJ0X3RpbWUiLCJkdXJhdGlvbiIsInNlc3Npb25fdHlwZSIsIm5vdGVzIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJ0aGVyYXBpc3QiLCJ0aGVyYXBpc3RFcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsInVzZXJDcmVkaXRzIiwiY3JlZGl0c0Vycm9yIiwiaW4iLCJndCIsImNyZWRpdHNGb3VuZCIsImxlbmd0aCIsIkVycm9yIiwibmV3Q3JlZGl0cyIsImluc2VydEVycm9yIiwiaW5zZXJ0IiwidXNlcl9pZCIsInVzZXJfdHlwZSIsImNyZWRpdHNfYmFsYW5jZSIsImNyZWRpdHNfcHVyY2hhc2VkIiwiY3JlZGl0c191c2VkIiwiY3JlZGl0c19leHBpcmVkIiwiY3JlYXRlZF9hdCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInVwZGF0ZWRfYXQiLCJzZXNzaW9uRGF0ZVRpbWUiLCJzZXNzaW9uRW5kVGltZSIsImdldFRpbWUiLCJub3ciLCJ0b2RheSIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwic2Vzc2lvbkRhdGUiLCJpc1RvZGF5IiwiaXNQYXN0IiwiY3VycmVudFRpbWUiLCJzZXNzaW9uVGltZSIsImJ1ZmZlclRpbWUiLCJBdmFpbGFiaWxpdHlNYW5hZ2VyIiwiYXZhaWxhYmlsaXR5TWFuYWdlciIsImF2YWlsYWJpbGl0eUNoZWNrIiwiaXNTbG90QXZhaWxhYmxlIiwiYXZhaWxhYmxlIiwiY29uZmxpY3RzIiwiY29uZmxpY3RNZXNzYWdlIiwibWFwIiwiYyIsIm1lc3NhZ2UiLCJqb2luIiwic2Vzc2lvblJlY29yZCIsInNlc3Npb25FcnJvciIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJzY2hlZHVsZWRfZGF0ZSIsInNjaGVkdWxlZF90aW1lIiwiZW5kX3RpbWUiLCJkdXJhdGlvbl9taW51dGVzIiwicGxhbm5lZF9kdXJhdGlvbl9taW51dGVzIiwic2Vzc2lvbklkIiwiY3JlYXRlVGhlcmFweVNlc3Npb25Sb29tIiwicm9vbSIsInRoZXJhcGlzdE5hbWUiLCJwYXRpZW50TmFtZSIsInNjaGVkdWxlZFRpbWUiLCJ1cGRhdGUiLCJzZXNzaW9uX3VybCIsInVybCIsInJvb21fbmFtZSIsIm5hbWUiLCJyb29tRXJyb3IiLCJjdXJyZW50Q3JlZGl0cyIsImZldGNoRXJyb3IiLCJjcmVkaXRFcnJvciIsIndhcm4iLCJ0aGVyYXBpc3RfbmFtZSIsInRoZXJhcGlzdF9lbWFpbCIsIkdFVCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsImdldCIsImxpbWl0IiwiTWF0aCIsIm1pbiIsInBhcnNlSW50IiwicXVlcnkiLCJvcmRlciIsImFzY2VuZGluZyIsInNlc3Npb25zIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/sessions/book/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/api-response.ts":
/*!*****************************!*\
  !*** ./lib/api-response.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   AuthorizationError: () => (/* binding */ AuthorizationError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   DatabaseError: () => (/* binding */ DatabaseError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError),\n/* harmony export */   handleApiError: () => (/* binding */ handleApiError),\n/* harmony export */   paginatedResponse: () => (/* binding */ paginatedResponse),\n/* harmony export */   parsePagination: () => (/* binding */ parsePagination),\n/* harmony export */   successResponse: () => (/* binding */ successResponse),\n/* harmony export */   validateRequired: () => (/* binding */ validateRequired)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nclass ApiError extends Error {\n    constructor(statusCode, message, details, code){\n        super(message), this.statusCode = statusCode, this.details = details, this.code = code;\n        this.name = 'ApiError';\n    }\n}\nclass ValidationError extends ApiError {\n    constructor(message, details){\n        super(400, message, details, 'VALIDATION_ERROR');\n    }\n}\nclass AuthenticationError extends ApiError {\n    constructor(message = 'Authentication required'){\n        super(401, message, null, 'AUTHENTICATION_ERROR');\n    }\n}\nclass AuthorizationError extends ApiError {\n    constructor(message = 'Insufficient permissions'){\n        super(403, message, null, 'AUTHORIZATION_ERROR');\n    }\n}\nclass NotFoundError extends ApiError {\n    constructor(resource = 'Resource'){\n        super(404, `${resource} not found`, null, 'NOT_FOUND_ERROR');\n    }\n}\nclass ConflictError extends ApiError {\n    constructor(message, details){\n        super(409, message, details, 'CONFLICT_ERROR');\n    }\n}\nclass DatabaseError extends ApiError {\n    constructor(message = 'Database operation failed', details){\n        super(500, message, details, 'DATABASE_ERROR');\n    }\n}\n/**\n * Standardized error response handler for API routes\n */ function handleApiError(error) {\n    console.error('API Error:', error);\n    // Handle our custom API errors\n    if (error instanceof ApiError) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message,\n            code: error.code,\n            details: error.details\n        }, {\n            status: error.statusCode\n        });\n    }\n    // Handle Supabase/PostgreSQL errors\n    if (error && typeof error === 'object' && 'code' in error) {\n        const dbError = error;\n        // Common database error codes\n        switch(dbError.code){\n            case '23505':\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Resource already exists',\n                    code: 'DUPLICATE_ERROR'\n                }, {\n                    status: 409\n                });\n            case '23503':\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Referenced resource does not exist',\n                    code: 'FOREIGN_KEY_ERROR'\n                }, {\n                    status: 400\n                });\n            case '23514':\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Invalid data provided',\n                    code: 'VALIDATION_ERROR'\n                }, {\n                    status: 400\n                });\n            case 'PGRST116':\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Resource not found',\n                    code: 'NOT_FOUND_ERROR'\n                }, {\n                    status: 404\n                });\n            default:\n                console.error('Unhandled database error:', dbError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Database error occurred',\n                    code: 'DATABASE_ERROR'\n                }, {\n                    status: 500\n                });\n        }\n    }\n    // Handle generic JavaScript errors\n    if (error instanceof Error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error',\n            code: 'INTERNAL_ERROR'\n        }, {\n            status: 500\n        });\n    }\n    // Fallback for unknown errors\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: 'An unexpected error occurred',\n        code: 'UNKNOWN_ERROR'\n    }, {\n        status: 500\n    });\n}\n/**\n * Success response helper\n */ function successResponse(data, status = 200) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        data\n    }, {\n        status\n    });\n}\n/**\n * Validation helper for request data\n */ function validateRequired(data, requiredFields) {\n    const missingFields = requiredFields.filter((field)=>!data[field]);\n    if (missingFields.length > 0) {\n        throw new ValidationError(`Missing required fields: ${missingFields.join(', ')}`, {\n            missingFields\n        });\n    }\n}\nfunction parsePagination(searchParams) {\n    const page = parseInt(searchParams.get('page') || '1');\n    const limit = Math.min(parseInt(searchParams.get('limit') || '10'), 100) // Max 100 items per page\n    ;\n    const offset = (page - 1) * limit;\n    return {\n        page,\n        limit,\n        offset\n    };\n}\nfunction paginatedResponse(data, total, page, limit) {\n    const totalPages = Math.ceil(total / limit);\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        data,\n        pagination: {\n            page,\n            limit,\n            total,\n            totalPages,\n            hasNext: page < totalPages,\n            hasPrev: page > 1\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/api-response.ts\n");

/***/ }),

/***/ "(rsc)/./lib/server-auth.ts":
/*!****************************!*\
  !*** ./lib/server-auth.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getServerSession: () => (/* binding */ getServerSession),\n/* harmony export */   requireApiAuth: () => (/* binding */ requireApiAuth),\n/* harmony export */   requireAuth: () => (/* binding */ requireAuth)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(rsc)/./node_modules/next/dist/api/navigation.react-server.js\");\n/* harmony import */ var _session_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./session-manager */ \"(rsc)/./lib/session-manager.ts\");\n\n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__.createClient)(\"https://frzciymslvpohhyefmtr.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\n// Short-lived session cache to reduce database load\nconst sessionCache = new Map();\nconst CACHE_TTL_MS = 10000 // 10 seconds - balance between performance and security\n;\n/**\n * Securely verify server-side session from HTTP-only cookie\n * This replaces the insecure cookie parsing in API routes\n */ async function getServerSession() {\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        // Try different cookie names based on user type\n        // Priority: unified session > specific user types\n        const cookieNames = [\n            'quiet_session',\n            'quiet_therapist_user',\n            'quiet_partner_user',\n            'quiet_admin_user',\n            'quiet_individual_user',\n            'quiet_user' // Legacy cookie name\n        ];\n        let userCookie = null;\n        let cookieData = null;\n        for (const cookieName of cookieNames){\n            userCookie = cookieStore.get(cookieName);\n            console.log('üîç DEBUG: Checking cookie:', cookieName, userCookie ? 'FOUND' : 'NOT FOUND');\n            if (userCookie) {\n                try {\n                    // Handle unified session cookie (JWT token) differently\n                    if (cookieName === 'quiet_session') {\n                        // This is a JWT token, not JSON data\n                        const { jwtVerify } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/jose\").then(__webpack_require__.bind(__webpack_require__, /*! jose */ \"(rsc)/./node_modules/jose/dist/webapi/index.js\"));\n                        const JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || 'your-secret-key');\n                        const { payload } = await jwtVerify(userCookie.value, JWT_SECRET);\n                        // Convert JWT payload to expected format\n                        cookieData = {\n                            session_token: userCookie.value,\n                            id: payload.id,\n                            email: payload.email,\n                            full_name: payload.name,\n                            user_type: payload.user_type || payload.role,\n                            is_verified: payload.is_verified,\n                            is_active: payload.is_active\n                        };\n                        console.log('üîç DEBUG: Parsed JWT session data:', {\n                            cookieName,\n                            cookieData\n                        });\n                        break;\n                    } else {\n                        // Handle legacy JSON cookies\n                        cookieData = JSON.parse(decodeURIComponent(userCookie.value));\n                        console.log('üîç DEBUG: Parsed cookie data:', {\n                            cookieName,\n                            cookieData\n                        });\n                        break;\n                    }\n                } catch (error) {\n                    console.log('üîç DEBUG: Failed to parse cookie:', cookieName, error);\n                    continue;\n                }\n            }\n        }\n        if (!cookieData) {\n            return null;\n        }\n        // If this is a unified session (JWT), we can trust it directly\n        if (cookieData.id && cookieData.email) {\n            console.log('‚úÖ Using unified session data directly');\n            const session = {\n                user: {\n                    id: cookieData.id,\n                    email: cookieData.email,\n                    full_name: cookieData.full_name,\n                    user_type: cookieData.user_type,\n                    is_verified: cookieData.is_verified,\n                    is_active: cookieData.is_active\n                },\n                session_token: cookieData.session_token || 'unified-session',\n                expires_at: new Date(Date.now() + 24 * 60 * 60 * 1000) // 24 hours from now\n            };\n            return session;\n        }\n        // Fallback to database verification for legacy sessions\n        if (!cookieData.session_token) {\n            return null;\n        }\n        const sessionToken = cookieData.session_token;\n        // Check cache first for performance\n        const cached = sessionCache.get(sessionToken);\n        if (cached && cached.expiry > Date.now()) {\n            console.log('‚úÖ Session loaded from cache');\n            return cached.session;\n        }\n        // Verify the session token against the database\n        console.log('üîç DEBUG: Looking for session token:', sessionToken);\n        const { data: sessionData, error: sessionError } = await supabase.from('user_sessions').select(`\n        user_id,\n        session_token,\n        expires_at,\n        users (\n          id,\n          email,\n          full_name,\n          user_type,\n          is_verified,\n          is_active\n        )\n      `).eq('session_token', sessionToken).single();\n        console.log('üîç DEBUG: Session query result:', {\n            sessionData,\n            sessionError\n        });\n        if (sessionError || !sessionData) {\n            console.log('‚ùå Invalid session token:', sessionError);\n            // Remove from cache if it was invalid\n            sessionCache.delete(sessionToken);\n            return null;\n        }\n        // Check if session is expired\n        const expiresAt = new Date(sessionData.expires_at);\n        if (expiresAt < new Date()) {\n            console.log('‚ùå Session expired');\n            // Clean up expired session and cache\n            sessionCache.delete(sessionToken);\n            await supabase.from('user_sessions').delete().eq('session_token', sessionToken);\n            return null;\n        }\n        // Create session object\n        const session = {\n            user: {\n                id: sessionData.users.id,\n                email: sessionData.users.email,\n                full_name: sessionData.users.full_name,\n                user_type: sessionData.users.user_type,\n                is_verified: sessionData.users.is_verified,\n                is_active: sessionData.users.is_active\n            },\n            session_token: sessionData.session_token,\n            expires_at: expiresAt\n        };\n        // Cache the validated session\n        sessionCache.set(sessionToken, {\n            session,\n            expiry: Date.now() + CACHE_TTL_MS\n        });\n        // Update last accessed time (async, don't wait)\n        supabase.from('user_sessions').update({\n            last_accessed_at: new Date().toISOString()\n        }).eq('session_token', sessionToken).then((result)=>{\n            if (result.error) {\n                console.warn('‚ö†Ô∏è Failed to update session access time:', result.error);\n            } else {\n                console.log('‚úÖ Session access time updated');\n            }\n        });\n        return session;\n    } catch (error) {\n        console.error('‚ùå Error verifying server session:', error);\n        return null;\n    }\n}\n/**\n * Require authentication and optionally specific user type\n * Throws redirect if not authenticated or wrong user type\n */ async function requireAuth(allowedUserTypes) {\n    const session = await getServerSession();\n    if (!session) {\n        (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect)('/login');\n    }\n    if (!session.user.is_active) {\n        (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect)('/account-disabled');\n    }\n    if (allowedUserTypes && !allowedUserTypes.includes(session.user.user_type)) {\n        (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect)('/unauthorized');\n    }\n    return session;\n}\n/**\n * Require specific user type for API routes\n * Returns error response if not authorized\n */ async function requireApiAuth(allowedUserTypes) {\n    // Try unified session first\n    const unifiedSession = await _session_manager__WEBPACK_IMPORTED_MODULE_2__.SessionManager.getSession();\n    if (unifiedSession) {\n        // Convert unified session to ServerSession format\n        const session = {\n            user: {\n                id: unifiedSession.id,\n                email: unifiedSession.email,\n                full_name: unifiedSession.name,\n                user_type: unifiedSession.user_type,\n                is_verified: unifiedSession.is_verified,\n                is_active: unifiedSession.is_active\n            },\n            session_token: unifiedSession.session_token || '',\n            expires_at: new Date(Date.now() + 24 * 60 * 60 * 1000) // 24 hours from now\n        };\n        if (!session.user.is_active) {\n            return {\n                error: new Response(JSON.stringify({\n                    error: 'Account disabled'\n                }), {\n                    status: 403,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n            };\n        }\n        if (allowedUserTypes && !allowedUserTypes.includes(session.user.user_type)) {\n            return {\n                error: new Response(JSON.stringify({\n                    error: 'Insufficient permissions'\n                }), {\n                    status: 403,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n            };\n        }\n        return {\n            session\n        };\n    }\n    // Fallback to old session system\n    const session = await getServerSession();\n    if (!session) {\n        return {\n            error: new Response(JSON.stringify({\n                error: 'Authentication required'\n            }), {\n                status: 401,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n        };\n    }\n    if (!session.user.is_active) {\n        return {\n            error: new Response(JSON.stringify({\n                error: 'Account disabled'\n            }), {\n                status: 403,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n        };\n    }\n    if (allowedUserTypes && !allowedUserTypes.includes(session.user.user_type)) {\n        return {\n            error: new Response(JSON.stringify({\n                error: 'Insufficient permissions'\n            }), {\n                status: 403,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n        };\n    }\n    return {\n        session\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/server-auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/session-manager.ts":
/*!********************************!*\
  !*** ./lib/session-manager.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionManager: () => (/* binding */ SessionManager),\n/* harmony export */   requireAuth: () => (/* binding */ requireAuth)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/webapi/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n\n\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || 'trpi-super-secret-key-2024-therapy-platform');\nclass SessionManager {\n    static{\n        this.COOKIE_NAME = 'quiet_session';\n    }\n    static{\n        this.MAX_AGE = 24 * 60 * 60 * 1000 // 24 hours (healthcare-grade security)\n        ;\n    }\n    static{\n        this.REFRESH_WINDOW = 6 * 60 * 60 * 1000 // Refresh if < 6 hours left\n        ;\n    }\n    static{\n        this.GRACE_PERIOD = 30 * 60 * 1000 // 30 minutes grace after expiry\n        ;\n    }\n    static{\n        this.ABSOLUTE_MAX_AGE = 30 * 24 * 60 * 60 * 1000 // 30 days absolute maximum\n        ;\n    }\n    /**\n   * Create a new session and set the cookie\n   */ static async createSession(sessionData) {\n        const token = await new jose__WEBPACK_IMPORTED_MODULE_2__.SignJWT(sessionData).setProtectedHeader({\n            alg: 'HS256'\n        }).setIssuedAt().setExpirationTime('24h') // Healthcare-grade: 24 hours\n        .sign(JWT_SECRET);\n        // Set the cookie\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        cookieStore.set(this.COOKIE_NAME, token, {\n            httpOnly: true,\n            secure: \"development\" === 'production',\n            sameSite: 'lax',\n            maxAge: this.MAX_AGE,\n            path: '/'\n        });\n        return token;\n    }\n    /**\n   * Get the current session from the cookie\n   */ static async getSession() {\n        try {\n            const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n            const token = cookieStore.get(this.COOKIE_NAME)?.value;\n            if (!token) {\n                console.log('üîç No session cookie found');\n                return null;\n            }\n            console.log('üç™ Raw cookie value:', token.substring(0, 50) + '...');\n            const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_3__.jwtVerify)(token, JWT_SECRET);\n            const sessionData = payload;\n            // Basic validation\n            if (!sessionData.id || !sessionData.email) {\n                console.error('‚ùå Invalid session data structure');\n                return null;\n            }\n            console.log('‚úÖ Session validated for user:', sessionData.email);\n            return sessionData;\n        } catch (error) {\n            // Distinguish between expired and invalid tokens\n            if (error?.code === 'ERR_JWT_EXPIRED' || error?.message?.includes('exp')) {\n                console.log('‚è∞ Session token expired');\n            } else {\n                console.error('‚ùå Session retrieval error:', error);\n            }\n            return null;\n        }\n    }\n    /**\n   * Get session with automatic refresh if nearing expiration\n   */ static async getSessionWithRefresh() {\n        try {\n            const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n            const token = cookieStore.get(this.COOKIE_NAME)?.value;\n            if (!token) {\n                console.log('üîç No session cookie found');\n                return null;\n            }\n            try {\n                const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_3__.jwtVerify)(token, JWT_SECRET);\n                const sessionData = payload;\n                // Check if token is nearing expiration (less than 6 hours remaining)\n                const expiryTime = (payload.exp || 0) * 1000;\n                const timeUntilExpiry = expiryTime - Date.now();\n                if (timeUntilExpiry < this.REFRESH_WINDOW && timeUntilExpiry > 0) {\n                    console.log('üîÑ Session nearing expiration, refreshing...');\n                    // Refresh the session\n                    await this.createSession(sessionData);\n                    console.log('‚úÖ Session refreshed successfully');\n                }\n                return sessionData;\n            } catch (error) {\n                // If token is expired but within grace period (30 minutes), allow refresh\n                if (error?.code === 'ERR_JWT_EXPIRED' || error?.message?.includes('exp')) {\n                    console.log('‚è∞ Token expired, checking if within grace period...');\n                    try {\n                        // Decode without verification to check expiry time\n                        const decoded = JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString());\n                        const expiryTime = decoded.exp * 1000;\n                        const timeSinceExpiry = Date.now() - expiryTime;\n                        // Allow refresh if expired less than 30 minutes ago (grace period)\n                        if (timeSinceExpiry < this.GRACE_PERIOD && timeSinceExpiry > 0) {\n                            console.log('‚úÖ Within 30-minute grace period, refreshing session...');\n                            const sessionData = decoded;\n                            await this.createSession(sessionData);\n                            return sessionData;\n                        } else {\n                            console.log('‚ùå Expired beyond grace period, cannot refresh');\n                        }\n                    } catch (decodeError) {\n                        console.error('‚ùå Error decoding expired token:', decodeError);\n                    }\n                }\n                console.error('‚ùå Session retrieval error:', error);\n                return null;\n            }\n        } catch (error) {\n            console.error('‚ùå Session refresh error:', error);\n            return null;\n        }\n    }\n    /**\n   * Get session from request (for API routes)\n   */ static async getSessionFromRequest(request) {\n        try {\n            const sessionCookie = request.cookies.get(this.COOKIE_NAME)?.value;\n            if (!sessionCookie) {\n                console.log('üîç No session cookie found');\n                return null;\n            }\n            console.log('üç™ Raw cookie value:', sessionCookie.substring(0, 50) + '...');\n            // Verify JWT token\n            const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_3__.jwtVerify)(sessionCookie, JWT_SECRET);\n            const sessionData = payload;\n            // Basic validation\n            if (!sessionData.id || !sessionData.email) {\n                console.error('‚ùå Invalid session data structure');\n                return null;\n            }\n            console.log('‚úÖ Session found for user:', sessionData.email);\n            return sessionData;\n        } catch (error) {\n            console.error('‚ùå Session retrieval error:', error);\n            return null;\n        }\n    }\n    /**\n   * Clear the session cookie\n   */ static async clearSession() {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        cookieStore.delete(this.COOKIE_NAME);\n    }\n    /**\n   * Clear expired session cookie from request\n   */ static async clearExpiredSession(request) {\n        const token = request.cookies.get(this.COOKIE_NAME)?.value;\n        if (token) {\n            try {\n                await (0,jose__WEBPACK_IMPORTED_MODULE_3__.jwtVerify)(token, JWT_SECRET);\n            } catch (error) {\n                // Token is expired or invalid, clear it\n                if (error instanceof Error && error.message.includes('exp')) {\n                    const response = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next();\n                    response.cookies.delete(this.COOKIE_NAME);\n                    return;\n                }\n            }\n        }\n    }\n    /**\n   * Update session data (useful for profile updates)\n   */ static async updateSession(updates) {\n        const currentSession = await this.getSession();\n        if (!currentSession) {\n            return null;\n        }\n        const updatedSession = {\n            ...currentSession,\n            ...updates\n        };\n        await this.createSession(updatedSession);\n        return updatedSession;\n    }\n    /**\n   * Check if user has specific role\n   */ static async hasRole(role) {\n        const session = await this.getSession();\n        return session?.role === role;\n    }\n    /**\n   * Require specific role (throws if not authorized)\n   */ static async requireRole(role) {\n        const session = await this.getSession();\n        if (!session || session.role !== role) {\n            throw new Error(`Access denied. Required role: ${role}`);\n        }\n        return session;\n    }\n}\n/**\n * Middleware helper for API routes\n */ async function requireAuth(requiredRole) {\n    return async (request)=>{\n        const session = await SessionManager.getSessionFromRequest(request);\n        if (!session) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: 'Authentication required'\n            }, {\n                status: 401\n            });\n        }\n        if (requiredRole && session.role !== requiredRole) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: `Access denied. Required role: ${requiredRole}`\n            }, {\n                status: 403\n            });\n        }\n        return {\n            session\n        };\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/session-manager.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsessions%2Fbook%2Froute&page=%2Fapi%2Fsessions%2Fbook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsessions%2Fbook%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsessions%2Fbook%2Froute&page=%2Fapi%2Fsessions%2Fbook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsessions%2Fbook%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_macbook_Desktop_trpi_app_app_api_sessions_book_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/sessions/book/route.ts */ \"(rsc)/./app/api/sessions/book/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/sessions/book/route\",\n        pathname: \"/api/sessions/book\",\n        filename: \"route\",\n        bundlePath: \"app/api/sessions/book/route\"\n    },\n    resolvedPagePath: \"/Users/macbook/Desktop/trpi-app/app/api/sessions/book/route.ts\",\n    nextConfigOutput,\n    userland: _Users_macbook_Desktop_trpi_app_app_api_sessions_book_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZzZXNzaW9ucyUyRmJvb2slMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnNlc3Npb25zJTJGYm9vayUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnNlc3Npb25zJTJGYm9vayUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1hY2Jvb2slMkZEZXNrdG9wJTJGdHJwaS1hcHAlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGbWFjYm9vayUyRkRlc2t0b3AlMkZ0cnBpLWFwcCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ2M7QUFDM0Y7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9tYWNib29rL0Rlc2t0b3AvdHJwaS1hcHAvYXBwL2FwaS9zZXNzaW9ucy9ib29rL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2Vzc2lvbnMvYm9vay9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Nlc3Npb25zL2Jvb2tcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3Nlc3Npb25zL2Jvb2svcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvbWFjYm9vay9EZXNrdG9wL3RycGktYXBwL2FwcC9hcGkvc2Vzc2lvbnMvYm9vay9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsessions%2Fbook%2Froute&page=%2Fapi%2Fsessions%2Fbook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsessions%2Fbook%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/jose"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsessions%2Fbook%2Froute&page=%2Fapi%2Fsessions%2Fbook%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsessions%2Fbook%2Froute.ts&appDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmacbook%2FDesktop%2Ftrpi-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();